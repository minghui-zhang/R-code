geom_point(alpha = 0.8) +
geom_errorbar(data = data_frame, aes(x = band_id, ymin = mean - stdev, ymax = mean + stdev)) +
facet_wrap(~month) +
ggtitle(paste(data_name, "summary for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
print(get_scatterplot(agsat_tidy, year, "agsat", 7000))
print(get_scatterplot(plos_tidy, year, "plos", 7000))
print(get_summary_scatterplot(agsat_summary,"agsat", year, 7000))
print(get_summary_scatterplot(plos_summary, "plos", year, 7000))
#print(get_summary_scatterplot(agsat_summary,"agsat", year, 2000))
#print(get_summary_scatterplot(plos_summary, "plos", year, 2000))
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(tidyr)
#setwd("~/Documents/R-code/LandCover/Soy-vs-Nonsoy-Agri")
agsat_raw <- read.csv("modis_table_agsat_partial.csv")
plos_raw <- read.csv("modis_table_plos_partial.csv")
year <- 2009
# turns date in millis into date
ms_to_date = function(ms, t0="1970-01-01", timezone) {
sec = ms / 1000
as.POSIXct(sec, origin=t0, tz=timezone)
}
# take raw data and add class as factor, clean up date columns
clean_raw_data = function(data_raw, year) {
# turn class into a factor
data_raw$class <- as.factor(data_raw$class)
# specify that original 'year' in data is actually harvest year
data_raw$harvest_year <- data_raw$year
data <- select(data_raw, -year)
data_year <- data[data$harvest_year == year,]
# turn system.time_start into date, month, day
# data_year$date <- ms_to_date(data_year$system.time_start, timezone="America/Los_Angeles")
data_year$month <- month(as.Date(data_year$DayOfYear, origin = paste0(year, '-01-01')))
# remove data with no month
data_year <- data_year[complete.cases(data_year$month),]
return(data_year)
}
get_tidy_data = function(data, year) {
tidy <- melt(data, id = c("month", "class", "DayOfYear"),
measure.vars = c("sur_refl_b01", "sur_refl_b02", "sur_refl_b03", "sur_refl_b04",
"sur_refl_b05", "sur_refl_b07")) # GOT RID OF"sur_refl_b06" because current version of plos data doesn't have this
# turn variable name from sur_refl_b01, etc to integer
tidy$band_id <- as.numeric(substr(tidy$variable, 12, 13))
return(tidy)
}
calculate_summary = function(tidy, year) {
# calculate mean and stdev of reflectance per (band x class x month)
split <- tidy %>% split(f = list(tidy$class, tidy$month, tidy$band_id))
means <- sapply(split, FUN = select, value) %>% lapply(mean, na.rm = TRUE) %>% unlist()
stdevs <- sapply(split, FUN = select, value) %>% lapply(sd, na.rm = TRUE) %>% unlist()
summary <- data.frame(class.month.band_id.value = names(means),
mean = means, stdev = stdevs)
summary <- tidyr::separate(data = summary, col = "class.month.band_id.value", into = c("class", "month", "band_id", "value"))
return(summary)
}
# clean the raw data
agsat <- clean_raw_data(agsat_raw, year)
plos <- clean_raw_data(plos_raw, year)
# turn into tidy data
agsat_tidy <- get_tidy_data(agsat, year)
plos_tidy <- get_tidy_data(plos, year)
# calculate summary
agsat_summary <- calculate_summary(agsat_tidy, year)
plos_summary <- calculate_summary(plos_tidy, year)
print(agsat_summary)
print(plos_summary)
get_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = value, col = class)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(month)) +
ggtitle(paste(data_name, "for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
get_summary_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = mean, col = class, pch = class)) +
geom_point(alpha = 0.8) +
geom_errorbar(data = data_frame, aes(x = band_id, ymin = mean - stdev, ymax = mean + stdev)) +
facet_wrap(~month) +
ggtitle(paste(data_name, "summary for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
#print(get_scatterplot(agsat_tidy, "agsat", year, 7000))
#print(get_scatterplot(plos_tidy, "plos", year, 7000))
#print(get_summary_scatterplot(agsat_summary,"agsat", year, 7000))
#print(get_summary_scatterplot(plos_summary, "plos", year, 7000))
print(get_summary_scatterplot(agsat_summary,"agsat", year, 2000))
print(get_summary_scatterplot(plos_summary, "plos", year, 2000))
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(tidyr)
#setwd("~/Documents/R-code/LandCover/Soy-vs-Nonsoy-Agri")
agsat_raw <- read.csv("modis_table_agsat_partial.csv")
plos_raw <- read.csv("modis_table_plos_partial.csv")
year <- 2010
# turns date in millis into date
ms_to_date = function(ms, t0="1970-01-01", timezone) {
sec = ms / 1000
as.POSIXct(sec, origin=t0, tz=timezone)
}
# take raw data and add class as factor, clean up date columns
clean_raw_data = function(data_raw, year) {
# turn class into a factor
data_raw$class <- as.factor(data_raw$class)
# specify that original 'year' in data is actually harvest year
data_raw$harvest_year <- data_raw$year
data <- select(data_raw, -year)
data_year <- data[data$harvest_year == year,]
# turn system.time_start into date, month, day
# data_year$date <- ms_to_date(data_year$system.time_start, timezone="America/Los_Angeles")
data_year$month <- month(as.Date(data_year$DayOfYear, origin = paste0(year, '-01-01')))
# remove data with no month
data_year <- data_year[complete.cases(data_year$month),]
return(data_year)
}
get_tidy_data = function(data, year) {
tidy <- melt(data, id = c("month", "class", "DayOfYear"),
measure.vars = c("sur_refl_b01", "sur_refl_b02", "sur_refl_b03", "sur_refl_b04",
"sur_refl_b05", "sur_refl_b07")) # GOT RID OF"sur_refl_b06" because current version of plos data doesn't have this
# turn variable name from sur_refl_b01, etc to integer
tidy$band_id <- as.numeric(substr(tidy$variable, 12, 13))
return(tidy)
}
calculate_summary = function(tidy, year) {
# calculate mean and stdev of reflectance per (band x class x month)
split <- tidy %>% split(f = list(tidy$class, tidy$month, tidy$band_id))
means <- sapply(split, FUN = select, value) %>% lapply(mean, na.rm = TRUE) %>% unlist()
stdevs <- sapply(split, FUN = select, value) %>% lapply(sd, na.rm = TRUE) %>% unlist()
summary <- data.frame(class.month.band_id.value = names(means),
mean = means, stdev = stdevs)
summary <- tidyr::separate(data = summary, col = "class.month.band_id.value", into = c("class", "month", "band_id", "value"))
return(summary)
}
# clean the raw data
agsat <- clean_raw_data(agsat_raw, year)
plos <- clean_raw_data(plos_raw, year)
# turn into tidy data
agsat_tidy <- get_tidy_data(agsat, year)
plos_tidy <- get_tidy_data(plos, year)
# calculate summary
agsat_summary <- calculate_summary(agsat_tidy, year)
plos_summary <- calculate_summary(plos_tidy, year)
print(agsat_summary)
print(plos_summary)
get_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = value, col = class)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(month)) +
ggtitle(paste(data_name, "for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
get_summary_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = mean, col = class, pch = class)) +
geom_point(alpha = 0.8) +
geom_errorbar(data = data_frame, aes(x = band_id, ymin = mean - stdev, ymax = mean + stdev)) +
facet_wrap(~month) +
ggtitle(paste(data_name, "summary for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
#print(get_scatterplot(agsat_tidy, "agsat", year, 7000))
#print(get_scatterplot(plos_tidy, "plos", year, 7000))
#print(get_summary_scatterplot(agsat_summary,"agsat", year, 7000))
#print(get_summary_scatterplot(plos_summary, "plos", year, 7000))
print(get_summary_scatterplot(agsat_summary,"agsat", year, 2000))
print(get_summary_scatterplot(plos_summary, "plos", year, 2000))
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(tidyr)
#setwd("~/Documents/R-code/LandCover/Soy-vs-Nonsoy-Agri")
agsat_raw <- read.csv("modis_table_agsat_partial.csv")
plos_raw <- read.csv("modis_table_plos_partial.csv")
year <- 2008
# turns date in millis into date
ms_to_date = function(ms, t0="1970-01-01", timezone) {
sec = ms / 1000
as.POSIXct(sec, origin=t0, tz=timezone)
}
# take raw data and add class as factor, clean up date columns
clean_raw_data = function(data_raw, year) {
# turn class into a factor
data_raw$class <- as.factor(data_raw$class)
# specify that original 'year' in data is actually harvest year
data_raw$harvest_year <- data_raw$year
data <- select(data_raw, -year)
data_year <- data[data$harvest_year == year,]
# turn system.time_start into date, month, day
# data_year$date <- ms_to_date(data_year$system.time_start, timezone="America/Los_Angeles")
data_year$month <- month(as.Date(data_year$DayOfYear, origin = paste0(year, '-01-01')))
# remove data with no month
data_year <- data_year[complete.cases(data_year$month),]
return(data_year)
}
get_tidy_data = function(data, year) {
tidy <- melt(data, id = c("month", "class", "DayOfYear"),
measure.vars = c("sur_refl_b01", "sur_refl_b02", "sur_refl_b03", "sur_refl_b04",
"sur_refl_b05", "sur_refl_b07")) # GOT RID OF"sur_refl_b06" because current version of plos data doesn't have this
# turn variable name from sur_refl_b01, etc to integer
tidy$band_id <- as.numeric(substr(tidy$variable, 12, 13))
return(tidy)
}
calculate_summary = function(tidy, year) {
# calculate mean and stdev of reflectance per (band x class x month)
split <- tidy %>% split(f = list(tidy$class, tidy$month, tidy$band_id))
means <- sapply(split, FUN = select, value) %>% lapply(mean, na.rm = TRUE) %>% unlist()
stdevs <- sapply(split, FUN = select, value) %>% lapply(sd, na.rm = TRUE) %>% unlist()
summary <- data.frame(class.month.band_id.value = names(means),
mean = means, stdev = stdevs)
summary <- tidyr::separate(data = summary, col = "class.month.band_id.value", into = c("class", "month", "band_id", "value"))
return(summary)
}
# clean the raw data
agsat <- clean_raw_data(agsat_raw, year)
plos <- clean_raw_data(plos_raw, year)
# turn into tidy data
agsat_tidy <- get_tidy_data(agsat, year)
plos_tidy <- get_tidy_data(plos, year)
# calculate summary
agsat_summary <- calculate_summary(agsat_tidy, year)
plos_summary <- calculate_summary(plos_tidy, year)
print(agsat_summary)
print(plos_summary)
get_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = value, col = class)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(month)) +
ggtitle(paste(data_name, "for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
get_summary_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = mean, col = class, pch = class)) +
geom_point(alpha = 0.8) +
geom_errorbar(data = data_frame, aes(x = band_id, ymin = mean - stdev, ymax = mean + stdev)) +
facet_wrap(~month) +
ggtitle(paste(data_name, "summary for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
#print(get_scatterplot(agsat_tidy, "agsat", year, 7000))
#print(get_scatterplot(plos_tidy, "plos", year, 7000))
#print(get_summary_scatterplot(agsat_summary,"agsat", year, 7000))
#print(get_summary_scatterplot(plos_summary, "plos", year, 7000))
print(get_summary_scatterplot(agsat_summary,"agsat", year, 2000))
print(get_summary_scatterplot(plos_summary, "plos", year, 2000))
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(tidyr)
#setwd("~/Documents/R-code/LandCover/Soy-vs-Nonsoy-Agri")
agsat_raw <- read.csv("modis_table_agsat_partial.csv")
plos_raw <- read.csv("modis_table_plos_partial.csv")
year <- 2007
# turns date in millis into date
ms_to_date = function(ms, t0="1970-01-01", timezone) {
sec = ms / 1000
as.POSIXct(sec, origin=t0, tz=timezone)
}
# take raw data and add class as factor, clean up date columns
clean_raw_data = function(data_raw, year) {
# turn class into a factor
data_raw$class <- as.factor(data_raw$class)
# specify that original 'year' in data is actually harvest year
data_raw$harvest_year <- data_raw$year
data <- select(data_raw, -year)
data_year <- data[data$harvest_year == year,]
# turn system.time_start into date, month, day
# data_year$date <- ms_to_date(data_year$system.time_start, timezone="America/Los_Angeles")
data_year$month <- month(as.Date(data_year$DayOfYear, origin = paste0(year, '-01-01')))
# remove data with no month
data_year <- data_year[complete.cases(data_year$month),]
return(data_year)
}
get_tidy_data = function(data, year) {
tidy <- melt(data, id = c("month", "class", "DayOfYear"),
measure.vars = c("sur_refl_b01", "sur_refl_b02", "sur_refl_b03", "sur_refl_b04",
"sur_refl_b05", "sur_refl_b07")) # GOT RID OF"sur_refl_b06" because current version of plos data doesn't have this
# turn variable name from sur_refl_b01, etc to integer
tidy$band_id <- as.numeric(substr(tidy$variable, 12, 13))
return(tidy)
}
calculate_summary = function(tidy, year) {
# calculate mean and stdev of reflectance per (band x class x month)
split <- tidy %>% split(f = list(tidy$class, tidy$month, tidy$band_id))
means <- sapply(split, FUN = select, value) %>% lapply(mean, na.rm = TRUE) %>% unlist()
stdevs <- sapply(split, FUN = select, value) %>% lapply(sd, na.rm = TRUE) %>% unlist()
summary <- data.frame(class.month.band_id.value = names(means),
mean = means, stdev = stdevs)
summary <- tidyr::separate(data = summary, col = "class.month.band_id.value", into = c("class", "month", "band_id", "value"))
return(summary)
}
# clean the raw data
agsat <- clean_raw_data(agsat_raw, year)
plos <- clean_raw_data(plos_raw, year)
# turn into tidy data
agsat_tidy <- get_tidy_data(agsat, year)
plos_tidy <- get_tidy_data(plos, year)
# calculate summary
agsat_summary <- calculate_summary(agsat_tidy, year)
plos_summary <- calculate_summary(plos_tidy, year)
print(agsat_summary)
print(plos_summary)
get_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = value, col = class)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(month)) +
ggtitle(paste(data_name, "for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
get_summary_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = mean, col = class, pch = class)) +
geom_point(alpha = 0.8) +
geom_errorbar(data = data_frame, aes(x = band_id, ymin = mean - stdev, ymax = mean + stdev)) +
facet_wrap(~month) +
ggtitle(paste(data_name, "summary for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
#print(get_scatterplot(agsat_tidy, "agsat", year, 7000))
#print(get_scatterplot(plos_tidy, "plos", year, 7000))
#print(get_summary_scatterplot(agsat_summary,"agsat", year, 7000))
#print(get_summary_scatterplot(plos_summary, "plos", year, 7000))
print(get_summary_scatterplot(agsat_summary,"agsat", year, 2000))
print(get_summary_scatterplot(plos_summary, "plos", year, 2000))
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(tidyr)
#setwd("~/Documents/R-code/LandCover/Soy-vs-Nonsoy-Agri")
agsat_raw <- read.csv("modis_table_agsat_partial.csv")
plos_raw <- read.csv("modis_table_plos_partial.csv")
year <- 2006
# turns date in millis into date
ms_to_date = function(ms, t0="1970-01-01", timezone) {
sec = ms / 1000
as.POSIXct(sec, origin=t0, tz=timezone)
}
# take raw data and add class as factor, clean up date columns
clean_raw_data = function(data_raw, year) {
# turn class into a factor
data_raw$class <- as.factor(data_raw$class)
# specify that original 'year' in data is actually harvest year
data_raw$harvest_year <- data_raw$year
data <- select(data_raw, -year)
data_year <- data[data$harvest_year == year,]
# turn system.time_start into date, month, day
# data_year$date <- ms_to_date(data_year$system.time_start, timezone="America/Los_Angeles")
data_year$month <- month(as.Date(data_year$DayOfYear, origin = paste0(year, '-01-01')))
# remove data with no month
data_year <- data_year[complete.cases(data_year$month),]
return(data_year)
}
get_tidy_data = function(data, year) {
tidy <- melt(data, id = c("month", "class", "DayOfYear"),
measure.vars = c("sur_refl_b01", "sur_refl_b02", "sur_refl_b03", "sur_refl_b04",
"sur_refl_b05", "sur_refl_b07")) # GOT RID OF"sur_refl_b06" because current version of plos data doesn't have this
# turn variable name from sur_refl_b01, etc to integer
tidy$band_id <- as.numeric(substr(tidy$variable, 12, 13))
return(tidy)
}
calculate_summary = function(tidy, year) {
# calculate mean and stdev of reflectance per (band x class x month)
split <- tidy %>% split(f = list(tidy$class, tidy$month, tidy$band_id))
means <- sapply(split, FUN = select, value) %>% lapply(mean, na.rm = TRUE) %>% unlist()
stdevs <- sapply(split, FUN = select, value) %>% lapply(sd, na.rm = TRUE) %>% unlist()
summary <- data.frame(class.month.band_id.value = names(means),
mean = means, stdev = stdevs)
summary <- tidyr::separate(data = summary, col = "class.month.band_id.value", into = c("class", "month", "band_id", "value"))
return(summary)
}
# clean the raw data
agsat <- clean_raw_data(agsat_raw, year)
plos <- clean_raw_data(plos_raw, year)
# turn into tidy data
agsat_tidy <- get_tidy_data(agsat, year)
plos_tidy <- get_tidy_data(plos, year)
# calculate summary
agsat_summary <- calculate_summary(agsat_tidy, year)
plos_summary <- calculate_summary(plos_tidy, year)
print(agsat_summary)
print(plos_summary)
get_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = value, col = class)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(month)) +
ggtitle(paste(data_name, "for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
get_summary_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = mean, col = class, pch = class)) +
geom_point(alpha = 0.8) +
geom_errorbar(data = data_frame, aes(x = band_id, ymin = mean - stdev, ymax = mean + stdev)) +
facet_wrap(~month) +
ggtitle(paste(data_name, "summary for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
#print(get_scatterplot(agsat_tidy, "agsat", year, 7000))
#print(get_scatterplot(plos_tidy, "plos", year, 7000))
#print(get_summary_scatterplot(agsat_summary,"agsat", year, 7000))
#print(get_summary_scatterplot(plos_summary, "plos", year, 7000))
print(get_summary_scatterplot(agsat_summary,"agsat", year, 2000))
print(get_summary_scatterplot(plos_summary, "plos", year, 2000))
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
library(tidyr)
#setwd("~/Documents/R-code/LandCover/Soy-vs-Nonsoy-Agri")
agsat_raw <- read.csv("modis_table_agsat_partial.csv")
plos_raw <- read.csv("modis_table_plos_partial.csv")
year <- 2005
# turns date in millis into date
ms_to_date = function(ms, t0="1970-01-01", timezone) {
sec = ms / 1000
as.POSIXct(sec, origin=t0, tz=timezone)
}
# take raw data and add class as factor, clean up date columns
clean_raw_data = function(data_raw, year) {
# turn class into a factor
data_raw$class <- as.factor(data_raw$class)
# specify that original 'year' in data is actually harvest year
data_raw$harvest_year <- data_raw$year
data <- select(data_raw, -year)
data_year <- data[data$harvest_year == year,]
# turn system.time_start into date, month, day
# data_year$date <- ms_to_date(data_year$system.time_start, timezone="America/Los_Angeles")
data_year$month <- month(as.Date(data_year$DayOfYear, origin = paste0(year, '-01-01')))
# remove data with no month
data_year <- data_year[complete.cases(data_year$month),]
return(data_year)
}
get_tidy_data = function(data, year) {
tidy <- melt(data, id = c("month", "class", "DayOfYear"),
measure.vars = c("sur_refl_b01", "sur_refl_b02", "sur_refl_b03", "sur_refl_b04",
"sur_refl_b05", "sur_refl_b07")) # GOT RID OF"sur_refl_b06" because current version of plos data doesn't have this
# turn variable name from sur_refl_b01, etc to integer
tidy$band_id <- as.numeric(substr(tidy$variable, 12, 13))
return(tidy)
}
calculate_summary = function(tidy, year) {
# calculate mean and stdev of reflectance per (band x class x month)
split <- tidy %>% split(f = list(tidy$class, tidy$month, tidy$band_id))
means <- sapply(split, FUN = select, value) %>% lapply(mean, na.rm = TRUE) %>% unlist()
stdevs <- sapply(split, FUN = select, value) %>% lapply(sd, na.rm = TRUE) %>% unlist()
summary <- data.frame(class.month.band_id.value = names(means),
mean = means, stdev = stdevs)
summary <- tidyr::separate(data = summary, col = "class.month.band_id.value", into = c("class", "month", "band_id", "value"))
return(summary)
}
# clean the raw data
agsat <- clean_raw_data(agsat_raw, year)
plos <- clean_raw_data(plos_raw, year)
# turn into tidy data
agsat_tidy <- get_tidy_data(agsat, year)
plos_tidy <- get_tidy_data(plos, year)
# calculate summary
agsat_summary <- calculate_summary(agsat_tidy, year)
plos_summary <- calculate_summary(plos_tidy, year)
print(agsat_summary)
print(plos_summary)
get_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = value, col = class)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(month)) +
ggtitle(paste(data_name, "for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
get_summary_scatterplot <- function(data_frame, data_name, year, ymax) {
plot <- ggplot(data = data_frame, aes(x = band_id, y = mean, col = class, pch = class)) +
geom_point(alpha = 0.8) +
geom_errorbar(data = data_frame, aes(x = band_id, ymin = mean - stdev, ymax = mean + stdev)) +
facet_wrap(~month) +
ggtitle(paste(data_name, "summary for year", year)) +
xlab("MODIS band") + ylab("reflectance") +
coord_cartesian(ylim = c(0, ymax))
return(plot)
}
#print(get_scatterplot(agsat_tidy, "agsat", year, 7000))
#print(get_scatterplot(plos_tidy, "plos", year, 7000))
#print(get_summary_scatterplot(agsat_summary,"agsat", year, 7000))
#print(get_summary_scatterplot(plos_summary, "plos", year, 7000))
print(get_summary_scatterplot(agsat_summary,"agsat", year, 2000))
print(get_summary_scatterplot(plos_summary, "plos", year, 2000))
