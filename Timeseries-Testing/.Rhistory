lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.05
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.01
))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.2
))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
str(summary(model))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
summary(model)$parameters
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
summary(model)$parameters$w
str(summary(model)$parameters)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
summary(model)$parameters[10]
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
EVI <- ts$EVI
t <- ts$day
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-10-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-02-20') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-10-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-02-20') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI#[targeted_days]
t <- ts$day#[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-08-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI#[targeted_days]
t <- ts$day#[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-08-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-05-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-12-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t + c3*(t^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(ts$day, ts$EVI)
lines(ts$day, ts$EVI, col = "green")
lines(ts$day[1:length(fitted(model))], fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-12-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
plot(t, EVI)
lines(t, EVI, col = "green")
lines(t, fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-08-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
))
?nls
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-08-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
),
control = nls.control(maxiter = 500))
plot(t, EVI)
lines(t, EVI, col = "green")
lines(t, fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-05-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
),
control = nls.control(maxiter = 500))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-06-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
),
control = nls.control(maxiter = 500))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-07-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) +
c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, c8 = 1, c9 = 1,
w = 0.1
),
control = nls.control(maxiter = 500))
plot(t, EVI)
lines(t, EVI, col = "green")
lines(t, fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-07-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting) #+
#c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-07-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting), #+
#c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, #c8 = 1, c9 = 1,
w = 0.1
),
control = nls.control(maxiter = 500))
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-08-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting), #+
#c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, #c8 = 1, c9 = 1,
w = 0.1
),
control = nls.control(maxiter = 500))
plot(t, EVI)
lines(t, EVI, col = "green")
lines(t, fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[10]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
# TARGET THE APPROPRIATE TIME PERIOD FOR FITTING
# find index of important dates, use to target specific parts of the year
targeted_start_day <- as.numeric(as.Date('2016-08-01') - as.Date('2016-08-01'))
targeted_end_day <- as.numeric(as.Date('2017-08-01') - as.Date('2016-08-01'))
targeted_days <- which(ts$day >= targeted_start_day & ts$day <= targeted_end_day) # index of days to target
EVI <- ts$EVI[targeted_days]
t <- ts$day[targeted_days]
t_fitting <- t/(2*3.14)
wt <- (6*3.14/length(t))*t/(2*3.14)
# Model estimation and adding of the fitted values to the previous plot:
model <- nls(EVI~c1 + c2*t_fitting + c3*(t_fitting^2) + c4*sin(w*t_fitting) + c5*cos(w*t_fitting) +
c6*sin(2*w*t_fitting) + c7*cos(2*w*t_fitting), #+
#c8*sin(3*w*t_fitting) + c9*cos(3*w*t_fitting),
start = list(c1 = 0.5, c2 = 0, c3 = 0,
c4 = 1, c5 = 1, c6 = 1,
c7 = 1, #c8 = 1, c9 = 1,
w = 0.1
),
control = nls.control(maxiter = 500))
plot(t, EVI)
lines(t, EVI, col = "green")
lines(t, fitted(model), col = "red")
summary(model)
# retreive omega from estimated coefficients
omega <- summary(model)$parameters[8]
quarter_period <- 3.14/(2*omega)
print('quarter period')
print(quarter_period)
