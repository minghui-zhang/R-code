library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code/Modeling/code/FCN_plotting.R')
source('E:/R-code/Modeling/code/FCN_sample_data.R')
source('E:/R-code/Modeling/code/FCN_run_model_spatial_sampled.R')
onset_type <- 'AA_3_persiann'
filename_median <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/median_onset_cell_', onset_type, '.csv')
filename_percentile5 <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/percentile5_onset_cell_', onset_type, '.csv')
filename_percentile95 <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/percentile95_onset_cell_', onset_type, '.csv')
filename_shp<- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/shp')
layername_shp <- paste0('median_onset_cell_SHP_', onset_type)
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
median_cell_raw <- read.csv(filename_median)
percentile5_cell_raw <- read.csv(filename_percentile5)
percentile95_cell_raw <- read.csv(filename_percentile95)
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
cell_sf <- st_read(dsn = filename_shp, layer = layername_shp)
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
median_cell <- median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
median_cell$plant_stat_type <- rep('median', nrow(median_cell))
# percentiles
percentile5_cell <- percentile5_cell_raw %>% rename_cols_percentile_cell()
percentile95_cell <- percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
cell_sf$cell_ID <- median_cell$cell_ID
cell_sf$cell_ID <- sapply(as.character(cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
cell_sf$plant_stat_type <- rep("median", nrow(cell_sf))
cell_sf_percentile5 <- cell_sf
cell_sf_percentile5$SC_plant <- percentile5_cell$SC_plant
cell_sf_percentile5$DC_plant <- percentile5_cell$DC_plant
cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(cell_sf_percentile5))
cell_sf_percentile95 <- cell_sf
cell_sf_percentile95$SC_plant <- percentile95_cell$SC_plant
cell_sf_percentile95$DC_plant <- percentile95_cell$DC_plant
cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(cell_sf_percentile95))
cell_sf <- rbind(cell_sf, cell_sf_percentile5, cell_sf_percentile95)
cell_sf_tidy <- cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
#tidy_by_intensity_delay("SC_delay", "DC_delay") %>%
dplyr::select(-c(SC_harvest, DC_harvest)) %>%
categorize_regions_cell_sf_tidy() # categorize cells into four regions
cell_sf_tidy$year_index <- cell_sf_tidy$year - 2003
cell_sf_tidy$year_factor <- as.factor(cell_sf_tidy$year)
cell_sf_tidy <- cell_sf_tidy %>%  drop_na
cell_sf_tidy$delay <- cell_sf_tidy$plant - cell_sf_tidy$onset
# plotting
# plotting
year <- 2007
cell_year <- cell_sf_tidy[cell_sf_tidy$year == year, ]
onset_map <- ggplot(cell_year) +
geom_sf(aes(fill = onset)) +
scale_fill_viridis() +
ggtitle(paste("Onset for spatial sampling", year, onset_type)) +
geom_polygon(data = MT_outline, aes(x = long, y = lat), color = "black", alpha = 0, linetype = 1) +
theme_bw()
print(onset_map)
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code/Modeling/code/FCN_plotting.R')
source('E:/R-code/Modeling/code/FCN_sample_data.R')
source('E:/R-code/Modeling/code/FCN_run_model_spatial_sampled.R')
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
median_cell_raw <- read.csv('E:/R-code/Modeling/data/median_onset_cell_v2.csv')
percentile5_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile5_onset_cell_v2.csv')
percentile95_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile95_onset_cell_v2.csv')
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
cell_sf <- st_read(dsn = 'E:/R-code/Modeling/data/shp/median_onset_cell', layer = 'median_onset_cell_SHP')
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code/Modeling/code/FCN_plotting.R')
source('E:/R-code/Modeling/code/FCN_sample_data.R')
source('E:/R-code/Modeling/code/FCN_run_model_spatial_sampled.R')
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
onset_type <- 'Gabriel_onset'
median_cell_raw <- read.csv('E:/R-code/Modeling/data/median_onset_cell_v2.csv')
percentile5_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile5_onset_cell_v2.csv')
percentile95_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile95_onset_cell_v2.csv')
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
cell_sf <- st_read(dsn = 'E:/R-code/Modeling/data/shp/median_onset_cell', layer = 'median_onset_cell_SHP')
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
median_cell <- median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
median_cell$plant_stat_type <- rep('median', nrow(median_cell))
# percentiles
percentile5_cell <- percentile5_cell_raw %>% rename_cols_percentile_cell()
percentile95_cell <- percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
cell_sf$cell_ID <- median_cell$cell_ID
cell_sf$cell_ID <- sapply(as.character(cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
cell_sf$plant_stat_type <- rep("median", nrow(cell_sf))
cell_sf_percentile5 <- cell_sf
cell_sf_percentile5$SC_plant <- percentile5_cell$SC_plant
cell_sf_percentile5$DC_plant <- percentile5_cell$DC_plant
cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(cell_sf_percentile5))
cell_sf_percentile95 <- cell_sf
cell_sf_percentile95$SC_plant <- percentile95_cell$SC_plant
cell_sf_percentile95$DC_plant <- percentile95_cell$DC_plant
cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(cell_sf_percentile95))
cell_sf <- rbind(cell_sf, cell_sf_percentile5, cell_sf_percentile95)
cell_sf_tidy <- cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
#tidy_by_intensity_delay("SC_delay", "DC_delay") %>%
dplyr::select(-c(SC_harvest, DC_harvest)) %>%
categorize_regions_cell_sf_tidy() # categorize cells into four regions
cell_sf_tidy$year_index <- cell_sf_tidy$year - 2003
cell_sf_tidy$year_factor <- as.factor(cell_sf_tidy$year)
cell_sf_tidy <- cell_sf_tidy %>%  drop_na
cell_sf_tidy$delay <- cell_sf_tidy$plant - cell_sf_tidy$onset
# plotting
year <- 2007
cell_year <- cell_sf_tidy[cell_sf_tidy$year == year, ]
onset_map <- ggplot(cell_year) +
geom_sf(aes(fill = onset)) +
scale_fill_viridis() +
ggtitle(paste("Onset for spatial sampling", year, 'Gabriel onset')) +
geom_polygon(data = MT_outline, aes(x = long, y = lat), color = "black", alpha = 0, linetype = 1) +
theme_bw()
print(onset_map)
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code/Modeling/code/FCN_plotting.R')
source('E:/R-code/Modeling/code/FCN_sample_data.R')
source('E:/R-code/Modeling/code/FCN_run_model_spatial_sampled.R')
onset_type <- 'AA_25_persiann'
filename_median <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/median_onset_cell_', onset_type, '.csv')
filename_percentile5 <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/percentile5_onset_cell_', onset_type, '.csv')
filename_percentile95 <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/percentile95_onset_cell_', onset_type, '.csv')
filename_shp<- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/shp')
layername_shp <- paste0('median_onset_cell_SHP_', onset_type)
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
median_cell_raw <- read.csv(filename_median)
percentile5_cell_raw <- read.csv(filename_percentile5)
percentile95_cell_raw <- read.csv(filename_percentile95)
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
cell_sf <- st_read(dsn = filename_shp, layer = layername_shp)
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
median_cell <- median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
median_cell$plant_stat_type <- rep('median', nrow(median_cell))
# percentiles
percentile5_cell <- percentile5_cell_raw %>% rename_cols_percentile_cell()
percentile95_cell <- percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
cell_sf$cell_ID <- median_cell$cell_ID
cell_sf$cell_ID <- sapply(as.character(cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
cell_sf$plant_stat_type <- rep("median", nrow(cell_sf))
cell_sf_percentile5 <- cell_sf
cell_sf_percentile5$SC_plant <- percentile5_cell$SC_plant
cell_sf_percentile5$DC_plant <- percentile5_cell$DC_plant
cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(cell_sf_percentile5))
cell_sf_percentile95 <- cell_sf
cell_sf_percentile95$SC_plant <- percentile95_cell$SC_plant
cell_sf_percentile95$DC_plant <- percentile95_cell$DC_plant
cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(cell_sf_percentile95))
cell_sf <- rbind(cell_sf, cell_sf_percentile5, cell_sf_percentile95)
cell_sf_tidy <- cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
#tidy_by_intensity_delay("SC_delay", "DC_delay") %>%
dplyr::select(-c(SC_harvest, DC_harvest)) %>%
categorize_regions_cell_sf_tidy() # categorize cells into four regions
cell_sf_tidy$year_index <- cell_sf_tidy$year - 2003
cell_sf_tidy$year_factor <- as.factor(cell_sf_tidy$year)
cell_sf_tidy <- cell_sf_tidy %>%  drop_na
cell_sf_tidy$delay <- cell_sf_tidy$plant - cell_sf_tidy$onset
# plotting
year <- 2013
cell_year <- cell_sf_tidy[cell_sf_tidy$year == year, ]
onset_map <- ggplot(cell_year) +
geom_sf(aes(fill = onset)) +
scale_fill_viridis() +
ggtitle(paste("Onset for spatial sampling", year, onset_type)) +
geom_polygon(data = MT_outline, aes(x = long, y = lat), color = "black", alpha = 0, linetype = 1) +
theme_bw()
print(onset_map)
# see if onset coef is statistically different for the different plant_stat_types
agg_scheme = FALSE
do_elim_year = FALSE
grid_size = 0.75
onset_results <- data.frame() # to save which grid offsets give a significant difference in onset coef between median and percentile plant
grid_index = 0
for (lat_offset in seq(0, 1.5, by = 0.75)) { # 0 to 1.5
for (lon_offset in seq(0, 1.5, by = 0.75)) { # 0 to 1.5
grid_index = grid_index + 1 # to keep track for plotting
# run OLS for median, percentile plants
median_output <- run_OLS(full_data = cell_sf_tidy,
predictors = c("onset", "intensity",
"region", "lat", "lon", # for spatial effects: lat, lon, region, Muni_code
"year_index" # for time effects
),
y.var = "plant", plant_stat = "median",
grid_size = grid_size,
lat_offset = lat_offset, lon_offset = lon_offset, agg_scheme = agg_scheme,
plot_samples = FALSE, plot_model_evals = FALSE,
year_oi = 2007,
do_elim_year = do_elim_year,
chosen_intensity = "DC")
percentile95_output <- run_OLS(full_data = cell_sf_tidy,
predictors = c("onset", "intensity",
"region", "lat", "lon", # for spatial effects: lat, lon, region, Muni_code
"year_index" # for time effects
),
y.var = "plant", plant_stat = "percentile95",
grid_size = grid_size,
lat_offset = lat_offset, lon_offset = lon_offset, agg_scheme = agg_scheme,
plot_samples = FALSE, plot_model_evals = FALSE,
year_oi = 2007,
do_elim_year = do_elim_year,
chosen_intensity = "DC")
percentile5_output <- run_OLS(full_data = cell_sf_tidy,
predictors = c("onset", "intensity",
"region", "lat", "lon", # for spatial effects: lat, lon, region, Muni_code
"year_index" # for time effects
),
y.var = "plant", plant_stat = "percentile5",
grid_size = grid_size,
lat_offset = lat_offset, lon_offset = lon_offset, agg_scheme = agg_scheme,
plot_samples = FALSE, plot_model_evals = FALSE,
year_oi = 2007,
do_elim_year = do_elim_year,
chosen_intensity = "DC")
# get onset coefficients and see if statistically different
output <- data.frame(onset_coef = c(median_output$onset_coef,
percentile95_output$onset_coef, percentile5_output$onset_coef),
onset_stderr = c(median_output$onset_std_error,
percentile95_output$onset_std_error, percentile5_output$onset_std_error),
intensity_coef = c(median_output$intensity_coef,
percentile95_output$intensity_coef, percentile5_output$intensity_coef),
intensity_stderr = c(median_output$intensity_std_error,
percentile95_output$intensity_std_error,
percentile5_output$intensity_std_error),
lat_coef = c(median_output$lat_coef,
percentile95_output$lat_coef, percentile5_output$lat_coef),
lat_stderr = c(median_output$lat_std_error,
percentile95_output$lat_std_error,
percentile5_output$lat_std_error),
year_coef = c(median_output$year_coef,
percentile95_output$year_coef, percentile5_output$year_coef),
year_stderr = c(median_output$year_std_error,
percentile95_output$year_std_error,
percentile5_output$year_std_error),
plant_stat_type = c("median", "percentile95", "percentile5"),
grid = c(grid_index, grid_index, grid_index))
onset_results <- rbind(onset_results, output)
}
}
names(onset_results) <- c('onset_coef', 'onset_stderr', 'intensity_coef', 'intensity_stderr',
'lat_coef', 'lat_stderr', 'year_coef', 'year_stderr',
'plant_stat_type', 'grid_index')
ggplot(onset_results, aes(x = grid_index, y = onset_coef, col = plant_stat_type)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = onset_coef - onset_stderr, ymax = onset_coef + onset_stderr)) +
ggtitle(onset_type) +
theme_bw()
ggplot(onset_results, aes(x = grid_index, y = intensity_coef, col = plant_stat_type)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = intensity_coef - intensity_stderr, ymax = intensity_coef + intensity_stderr)) +
ggtitle(onset_type) +
theme_bw()
ggplot(onset_results, aes(x = grid_index, y = lat_coef, col = plant_stat_type)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = lat_coef - lat_stderr, ymax = lat_coef + lat_stderr)) +
ggtitle(onset_type) +
theme_bw()
ggplot(onset_results, aes(x = grid_index, y = year_coef, col = plant_stat_type)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = year_coef - year_stderr, ymax = year_coef + year_stderr)) +
ggtitle(onset_type) +
theme_bw()
library(ggplot2)
library(tidyverse)
library(broom)
library(dplyr)
library(rgdal)
library(rgeos)
library(raster)
library(sf)
library(sp)
library(tmap)
library(viridis)
library(spdep)
library(spatialreg)
library(lmtest)
library(Metrics) # for rmse
library(leaflet)
library(leaps) # stepwise model selection
#E:/R-code/Modeling/code/FCN_clean_csvs.R
#~/Documents/R-code
source('E:/R-code/Modeling/code/FCN_clean_csvs.R')
source('E:/R-code/Modeling/code/FCN_plotting.R')
source('E:/R-code/Modeling/code/FCN_sample_data.R')
source('E:/R-code/Modeling/code/FCN_run_model_spatial_sampled.R')
MT_outline <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/MatoGrossoOutline', layer = 'MatoGrossoOutline')
crs(MT_outline) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
grid_1deg <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/grid_1deg', layer = 'grid_1deg')
munis <- readOGR(dsn = 'E:/R-code/Modeling/data/shp/munis', layer = 'munis_SHP')
crs(munis) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
# ALTERNATIVE ONSET ------------------------------------------------------------------------------------------------------
onset_type <- 'AA_25_persiann'
filename_median <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/median_onset_cell_', onset_type, '.csv')
filename_percentile5 <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/percentile5_onset_cell_', onset_type, '.csv')
filename_percentile95 <- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/percentile95_onset_cell_', onset_type, '.csv')
filename_shp<- paste0('E:/R-code/Modeling/data/data_onset_', onset_type, '/shp')
layername_shp <- paste0('median_onset_cell_SHP_', onset_type)
alternative_median_cell_raw <- read.csv(filename_median)
alternative_percentile5_cell_raw <- read.csv(filename_percentile5)
alternative_percentile95_cell_raw <- read.csv(filename_percentile95)
alternative_cell_sf <- st_read(dsn = filename_shp, layer = layername_shp)
# GABRIEL ONSET -------------------------------------------------------------------------------------------------------
original_median_cell_raw <- read.csv('E:/R-code/Modeling/data/median_onset_cell_v2.csv')
original_percentile5_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile5_onset_cell_v2.csv')
original_percentile95_cell_raw <- read.csv('E:/R-code/Modeling/data/percentile95_onset_cell_v2.csv')
original_cell_sf <- st_read(dsn = 'E:/R-code/Modeling/data/shp/median_onset_cell', layer = 'median_onset_cell_SHP')
min_soy_area <- 2 #km2. min area of total or SC/DC soy in cell, muni or property to be considered in model
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
alternative_median_cell <- alternative_median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
alternative_median_cell$plant_stat_type <- rep('median', nrow(alternative_median_cell))
# percentiles
alternative_percentile5_cell <- alternative_percentile5_cell_raw %>% rename_cols_percentile_cell()
alternative_percentile95_cell <- alternative_percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
alternative_cell_sf$cell_ID <- alternative_median_cell$cell_ID
alternative_cell_sf$cell_ID <- sapply(as.character(alternative_cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
alternative_cell_sf$plant_stat_type <- rep("median", nrow(alternative_cell_sf))
alternative_cell_sf_percentile5 <- alternative_cell_sf
alternative_cell_sf_percentile5$SC_plant <- alternative_percentile5_cell$SC_plant
alternative_cell_sf_percentile5$DC_plant <- alternative_percentile5_cell$DC_plant
alternative_cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(alternative_cell_sf_percentile5))
alternative_cell_sf_percentile95 <- alternative_alternative_cell_sf
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
alternative_median_cell <- alternative_median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
alternative_median_cell$plant_stat_type <- rep('median', nrow(alternative_median_cell))
# percentiles
alternative_percentile5_cell <- alternative_percentile5_cell_raw %>% rename_cols_percentile_cell()
alternative_percentile95_cell <- alternative_percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
alternative_cell_sf$cell_ID <- alternative_median_cell$cell_ID
alternative_cell_sf$cell_ID <- sapply(as.character(alternative_cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
alternative_cell_sf$plant_stat_type <- rep("median", nrow(alternative_cell_sf))
alternative_cell_sf_percentile5 <- alternative_cell_sf
alternative_cell_sf_percentile5$SC_plant <- alternative_percentile5_cell$SC_plant
alternative_cell_sf_percentile5$DC_plant <- alternative_percentile5_cell$DC_plant
alternative_cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(alternative_cell_sf_percentile5))
alternative_cell_sf_percentile95 <- alternative_cell_sf
alternative_cell_sf_percentile95$SC_plant <- alternative_percentile95_cell$SC_plant
alternative_cell_sf_percentile95$DC_plant <- alternative_percentile95_cell$DC_plant
alternative_cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(alternative_cell_sf_percentile95))
alternative_cell_sf <- rbind(alternative_cell_sf, alternative_cell_sf_percentile5, alternative_cell_sf_percentile95)
alternative_cell_sf_tidy <- alternative_cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
#tidy_by_intensity_delay("SC_delay", "DC_delay") %>%
dplyr::select(-c(SC_harvest, DC_harvest)) %>%
categorize_regions_cell_sf_tidy() # categorize cells into four regions
alternative_cell_sf_tidy$year_index <- alternative_cell_sf_tidy$year - 2003
alternative_cell_sf_tidy$year_factor <- as.factor(alternative_cell_sf_tidy$year)
alternative_cell_sf_tidy <- alternative_cell_sf_tidy %>%  drop_na
alternative_cell_sf_tidy$delay <- alternative_cell_sf_tidy$plant - alternative_cell_sf_tidy$onset
alternative_cell_sf_tidy$original_onset <- original_cell_sf_tidy$onset
# CSV DATA -----------------------------------------------------------------------------------------------------------------
# median cell
original_median_cell <- original_median_cell_raw %>% delete_cols_median_cell() %>%
rename_cols_median_cell()
original_median_cell$plant_stat_type <- rep('median', nrow(original_median_cell))
# percentiles
original_percentile5_cell <- original_percentile5_cell_raw %>% rename_cols_percentile_cell()
original_percentile95_cell <- original_percentile95_cell_raw %>% rename_cols_percentile_cell()
# SF DATA ------------------------------------------------------------------------------------------------
# get cell_ID column for median
original_cell_sf$cell_ID <- original_median_cell$cell_ID
original_cell_sf$cell_ID <- sapply(as.character(original_cell_sf$cell_ID), clean_cell_ID)
# join median, percentile data to cell_sf
# cell_sf has median information, but copy it and put in percentile info for DC and SC plant
original_cell_sf$plant_stat_type <- rep("median", nrow(original_cell_sf))
original_cell_sf_percentile5 <- original_cell_sf
original_cell_sf_percentile5$SC_plant <- original_percentile5_cell$SC_plant
original_cell_sf_percentile5$DC_plant <- original_percentile5_cell$DC_plant
original_cell_sf_percentile5$plant_stat_type <- rep("percentile5", nrow(original_cell_sf_percentile5))
original_cell_sf_percentile95 <- original_cell_sf
original_cell_sf_percentile95$SC_plant <- original_percentile95_cell$SC_plant
original_cell_sf_percentile95$DC_plant <- original_percentile95_cell$DC_plant
original_cell_sf_percentile95$plant_stat_type <- rep("percentile95", nrow(original_cell_sf_percentile95))
original_cell_sf <- rbind(original_cell_sf, original_cell_sf_percentile5, original_cell_sf_percentile95)
original_cell_sf_tidy <- original_cell_sf %>% tidy_by_intensity_plant("SC_plant", "DC_plant") %>%
#tidy_by_intensity_delay("SC_delay", "DC_delay") %>%
dplyr::select(-c(SC_harvest, DC_harvest)) %>%
categorize_regions_cell_sf_tidy() # categorize cells into four regions
original_cell_sf_tidy$year_index <- original_cell_sf_tidy$year - 2003
original_cell_sf_tidy$year_factor <- as.factor(original_cell_sf_tidy$year)
original_cell_sf_tidy <- original_cell_sf_tidy %>%  drop_na
original_cell_sf_tidy$delay <- original_cell_sf_tidy$plant - original_cell_sf_tidy$onset
alternative_cell_sf_tidy$original_onset <- original_cell_sf_tidy$onset
#alternative_cell_sf_tidy$original_onset <- original_cell_sf_tidy$onset
#alternative_cell_sf_tidy$alternative_onset <- alternative_cell_sf_tidy$onset
#alternative_cell_sf_tidy$onset_diff <- alternative_cell_sf_tidy$original_onset - alternative_cell_sf_tidy$alternative_onset
# the cells don't match up, so sample them
alternative_sampled_data <- get_sampled_data(alternative_cell_sf_tidy, plant_stat = "median", grid_size = 0.25,
lat_offset = 0, lon_offset = 0, agg_scheme = FALSE, plot_samples = FALSE, year_oi = 2007)
#alternative_cell_sf_tidy$original_onset <- original_cell_sf_tidy$onset
#alternative_cell_sf_tidy$alternative_onset <- alternative_cell_sf_tidy$onset
#alternative_cell_sf_tidy$onset_diff <- alternative_cell_sf_tidy$original_onset - alternative_cell_sf_tidy$alternative_onset
# the cells don't match up, so sample them
alternative_sampled_data <- get_sampled_data(alternative_cell_sf_tidy, plant_stat = "median", grid_size = 0.25,
lat_offset = 0, lon_offset = 0, agg_scheme = FALSE, plot_samples = FALSE, year_oi = 2007)
original_sampled_data <- get_sampled_data(original_cell_sf_tidy, plant_stat = "median", grid_size = 0.25,
lat_offset = 0, lon_offset = 0, agg_scheme = FALSE, plot_samples = FALSE, year_oi = 2007)
nrow(alternative_sampled_data)
nrow(original_sampled_data)
